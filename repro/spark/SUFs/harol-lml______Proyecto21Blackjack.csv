PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(13:22)|/webserver/src/main/java/webserver/server.java(13:45)|spark.Route.handle(spark.Request,spark.Response)|SYMBOL_KIND_METHOD|SYMBOL_USE_OVERRIDING
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(13:22)|/webserver/src/main/java/webserver/server.java(13:45)|spark.Route|SYMBOL_KIND_INTERFACE|SYMBOL_USE_IMPLEMENTATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(13:3)|/webserver/src/main/java/webserver/server.java(13:47)|spark.Spark.get(java.lang.String,spark.Route)|SYMBOL_KIND_METHOD|SYMBOL_USE_STATIC_INVOCATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(14:15)|/webserver/src/main/java/webserver/server.java(14:36)|spark.Route.handle(spark.Request,spark.Response)|SYMBOL_KIND_METHOD|SYMBOL_USE_OVERRIDING
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(14:15)|/webserver/src/main/java/webserver/server.java(14:36)|spark.Route|SYMBOL_KIND_INTERFACE|SYMBOL_USE_IMPLEMENTATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(14:3)|/webserver/src/main/java/webserver/server.java(14:38)|spark.Spark.get(java.lang.String,spark.Route)|SYMBOL_KIND_METHOD|SYMBOL_USE_STATIC_INVOCATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(15:18)|/webserver/src/main/java/webserver/server.java(15:37)|spark.Route.handle(spark.Request,spark.Response)|SYMBOL_KIND_METHOD|SYMBOL_USE_OVERRIDING
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(15:18)|/webserver/src/main/java/webserver/server.java(15:37)|spark.Route|SYMBOL_KIND_INTERFACE|SYMBOL_USE_IMPLEMENTATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(15:3)|/webserver/src/main/java/webserver/server.java(15:39)|spark.Spark.get(java.lang.String,spark.Route)|SYMBOL_KIND_METHOD|SYMBOL_USE_STATIC_INVOCATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(16:20)|/webserver/src/main/java/webserver/server.java(16:38)|spark.Route.handle(spark.Request,spark.Response)|SYMBOL_KIND_METHOD|SYMBOL_USE_OVERRIDING
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(16:20)|/webserver/src/main/java/webserver/server.java(16:38)|spark.Route|SYMBOL_KIND_INTERFACE|SYMBOL_USE_IMPLEMENTATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(16:3)|/webserver/src/main/java/webserver/server.java(16:40)|spark.Spark.get(java.lang.String,spark.Route)|SYMBOL_KIND_METHOD|SYMBOL_USE_STATIC_INVOCATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(17:16)|/webserver/src/main/java/webserver/server.java(17:33)|spark.Route.handle(spark.Request,spark.Response)|SYMBOL_KIND_METHOD|SYMBOL_USE_OVERRIDING
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(17:16)|/webserver/src/main/java/webserver/server.java(17:33)|spark.Route|SYMBOL_KIND_INTERFACE|SYMBOL_USE_IMPLEMENTATION
PLACEHOLDER_CLIENT_ID|CLIENT|/data/ucov/repro/spark/Clients/harol-lml/Proyecto21Blackjack|/webserver/src/main/java/webserver/server.java(17:3)|/webserver/src/main/java/webserver/server.java(17:35)|spark.Spark.get(java.lang.String,spark.Route)|SYMBOL_KIND_METHOD|SYMBOL_USE_STATIC_INVOCATION
